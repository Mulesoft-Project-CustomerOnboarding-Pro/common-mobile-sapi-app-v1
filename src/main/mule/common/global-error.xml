<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">
	
	        <error-handler name="Error_Handler_Apikit">
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <logger level="INFO" doc:name="Error_Logger" doc:id="db7f4def-190c-4b36-81a1-abde8819f9b5" message="#[%dw 2.0 &#10;output application/json indent = false &#10;--- &#10;{ 	&#10;    TimeStamp: (now() &gt;&gt; &quot;UTC&quot;)  as String {format: &quot;yyyy-MM-dd:hh-mm-ss&quot;}, &#10;    transactionId: vars.headers.'x-cms-transactionid:',&#10;    AppName: app.name, 	&#10;    FlowName: flow.name, 	&#10;    BusinessProcessName:  &quot;Customer Registration&quot;, 	&#10;    Category:  &quot;Customer&quot;, 	&#10;    OriginatingApplication:  &quot;Process API&quot;, 	&#10;    DesinationApplication:  &quot;Salesforce&quot;, 	&#10;    CustomerId: &quot;NA&quot;, 	&#10;    txnState:  &quot;Error&quot; &#10;}]" />
			<ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{ 
	"msg": "failed operation",
	"code": 400,
	"success": false,
	"eventId": vars.requestData.headers.'x-cms-transactionid',
	"error": {
		"type": "BAD_REQUEST",
		"title": "Invalid Request",
		"details": "The input contains invalid data"

	        }
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            
</on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <logger level="INFO" doc:name="Error_Logger" doc:id="e8fc7856-a2ad-480b-8b9c-053c9a6bed81" message="#[%dw 2.0 &#10;output application/json indent = false &#10;--- &#10;{ 	&#10;    TimeStamp: (now() &gt;&gt; &quot;UTC&quot;)  as String {format: &quot;yyyy-MM-dd:hh-mm-ss&quot;}, &#10;    transactionId: vars.headers.'x-cms-transactionid:',&#10;    AppName: app.name, 	&#10;    FlowName: flow.name, 	&#10;    BusinessProcessName:  &quot;Customer Registration&quot;, 	&#10;    Category:  &quot;Customer&quot;, 	&#10;    OriginatingApplication:  &quot;Process API&quot;, 	&#10;    DesinationApplication:  &quot;Salesforce&quot;, 	&#10;    CustomerId: &quot;NA&quot;, 	&#10;    txnState:  &quot;Error&quot; &#10;}]" />
			<ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{ 
		"msg": "failed operation",
		"code": 404,
		"success": false,
		"eventId": vars.requestData.headers.'x-cms-transactionid',
		"error": 
  {
				"type": "NOT_FOUND",
				"title": "Resource not found",
				"details": "The URI requested is invalid or the resource requested does not exists"

			  }
  }
]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[404]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            
</on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <logger level="INFO" doc:name="Error_Logger" doc:id="890f1ad0-6288-4505-9d19-5207cf5214f7" message="#[%dw 2.0 &#10;output application/json indent = false &#10;--- &#10;{ 	&#10;    TimeStamp: (now() &gt;&gt; &quot;UTC&quot;)  as String {format: &quot;yyyy-MM-dd:hh-mm-ss&quot;}, &#10;    transactionId: vars.headers.'x-cms-transactionid:',&#10;    AppName: app.name, 	&#10;    FlowName: flow.name, 	&#10;    BusinessProcessName:  &quot;Customer Registration&quot;, 	&#10;    Category:  &quot;Customer&quot;, 	&#10;    OriginatingApplication:  &quot;Process API&quot;, 	&#10;    DesinationApplication:  &quot;Salesforce&quot;, 	&#10;    CustomerId: &quot;NA&quot;, 	&#10;    txnState:  &quot;Error&quot; &#10;}]" />
			<ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{ 
	"msg": "Method Not Allowed",
	"code": 405,
	"success": false,
	"eventId": vars.requestData.headers.'x-cms-transactionid',
	"error": {
		"type": "METHOD_NOT_ALLOWED",
		"title": "Method not allowed",
		"details": "The input contains invalid data"

	        }
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[405]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            
</on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <logger level="INFO" doc:name="Error_Logger" doc:id="2e29300a-5b23-494d-9dae-b546acba10f8" message="#[%dw 2.0 &#10;output application/json indent = false &#10;--- &#10;{ 	&#10;    TimeStamp: (now() &gt;&gt; &quot;UTC&quot;)  as String {format: &quot;yyyy-MM-dd:hh-mm-ss&quot;}, &#10;    transactionId: vars.headers.'x-cms-transactionid:',&#10;    AppName: app.name, 	&#10;    FlowName: flow.name, 	&#10;    BusinessProcessName:  &quot;Customer Registration&quot;, 	&#10;    Category:  &quot;Customer&quot;, 	&#10;    OriginatingApplication:  &quot;Process API&quot;, 	&#10;    DesinationApplication:  &quot;Salesforce&quot;, 	&#10;    CustomerId: &quot;NA&quot;, 	&#10;    txnState:  &quot;Error&quot; &#10;}]" />
			<ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{ 
	"msg": "Method Not Allowed",
	"code": 415,
	"success": false,
	"eventId": vars.requestData.headers.'x-cms-transactionid',
	"error": {
		"type": "UNSUPPORTED_MEDIA_TYPE",
		"title": "Unsupported Media Type",
		"details": "The input contains invalid data"

	        }
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[415]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            
</on-error-propagate>
        </error-handler>
	<error-handler name="Error-Handler-Application" doc:id="65ddd5c8-eb10-4ce0-990c-f9fce3043676" >
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="943aedf3-7e5b-4128-b2be-6353de8f7b82" type="EMAIL:CONNECTIVITY, EMAIL:RETRY_EXHAUSTED, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
			<logger level="INFO" doc:name="Logger" doc:id="4f72d836-49f3-4cb8-8b24-0041ca8e9e14" message="#[%dw 2.0 &#10;output application/json indent = false &#10;--- &#10;{ 	&#10;    TimeStamp: (now() &gt;&gt; &quot;UTC&quot;)  as String {format: &quot;yyyy-MM-dd:hh-mm-ss&quot;}, &#10;    transactionId: vars.headers.'x-cms-transactionid:',&#10;    AppName: app.name, 	&#10;    FlowName: flow.name, 	&#10;    BusinessProcessName:  &quot;Notification&quot;, 	&#10;    Category:  &quot;Notification&quot;, 	&#10;    OriginatingApplication:  &quot;Process API&quot;, 	&#10;    DesinationApplication:  &quot;SMTP&quot;, 	&#10;    CustomerId: &quot;NA&quot;, 	&#10;    txnState:  &quot;Error&quot; &#10;}]"/>
			<ee:transform doc:name="Transform Message" doc:id="58495283-bd91-4a78-821e-1ff2609ddbd5" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0var error = ???

output application/java
---
{ 
	"msg": "failed operation",
	"code": 500,
	"success": false,
	"eventId": vars.requestData.headers.'x-cms-transactionid',
	"error": {
		"type": error.errorType,
		"title": "Critical Error",
		"details": error.description

	        }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
		</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate1" doc:id="e04b0287-4f87-4050-bf91-73ac50bb8e4c" type="ANY" >
			<logger level="INFO" doc:name="Logger" doc:id="c4c39dc0-5be4-4c8b-8624-b3d81bb7dc16" message="#[%dw 2.0 &#10;output application/json indent = false &#10;--- &#10;{ 	&#10;    TimeStamp: (now() &gt;&gt; &quot;UTC&quot;)  as String {format: &quot;yyyy-MM-dd:hh-mm-ss&quot;}, &#10;    transactionId: vars.headers.'x-cms-transactionid:',&#10;    AppName: app.name, 	&#10;    FlowName: flow.name, 	&#10;    BusinessProcessName:  &quot;Notification&quot;, 	&#10;    Category:  &quot;Notification&quot;, 	&#10;    OriginatingApplication:  &quot;Process API&quot;, 	&#10;    DesinationApplication:  &quot;SMTP&quot;, 	&#10;    CustomerId: &quot;NA&quot;, 	&#10;    txnState:  &quot;Error&quot; &#10;}]" />
			<ee:transform doc:name="Transform Message" doc:id="7a88d9ac-1c9e-4c66-9547-6450367998a6" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0var error = ???

output application/java
---
{ 
	"msg": "failed operation",
	"code": 500,
	"success": false,
	"eventId": vars.requestData.headers.'x-cms-transactionid',
	"error": {
		"type": error.errorType,
		"title": "Critical Error",
		"details": error.description

	        }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
		</on-error-propagate>
	</error-handler>
	
	
</mule>
